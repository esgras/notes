git config --list -- список настроек
git config --global user.name username
git config --global user.email user@mail.com

git reset filename -- удалить файл из индекса (т.е. очереди для следующего коммита через комманду git add.)
git rm filename --cached -- удалить файл из индекса (т.е он был в commits но больше не нужен, это удалит его но при этом не уничтожит файл в папке)

git reset --hard HEAD~1
git reset --hard идентификатор_коммита


git reset --soft HEAD~1 -- возвращает до состояния предыдущего коммита, при этом изминения сделанные к текущему коммиту уже в Index (stage area)
если сделать git commit -- то получим коммит аналогичный текущему
при этом если до 
git reset --soft HEAD~1 -- в файл вносились изминения то он так же и останиться изменненым, т.е его предыдущее состояние добавлено в INDEX
если сделать git commit -- то получим этот же коммит с изменнения в текущей рабочей области которые не стерлись
если сделать git add + git commit то получим коммит в котором добавяться изминения внесенный в коммит

git reset --soft HEAD~1 -- в файл после коммита внеслись изминения и добавлялся в индекс, после команды получим файл добавленный в индекс с изминениями после последнего коммита

git reset HEAD~1 (то же что и git mixed) -- вернет на предыдущей коммит, при этом  файл изминен но не добавлен в индекс, то что изменилось с предыдущего коммита остаеться
git reset HEAD~1 -- то же что и выше но изминения еще не добавлены в индекс (изминения от последнего состояния файла)

git reset --hard HEAD~1 -- возвращает до состояния предыдущего коммита при этом изминений вобще нет, затерлась вся работа как производимая в следущем коммите так и после него (до внесения в индекс) / режит индекс + восстанавливает файл в рабочей области до предыдущего состояния из коммита

.gitignore
/path -- игнорируем все с этого пути
!file.txt -- не игнорируем файл

если нужно не игноровать специальный путь в директории то
/path/* -- игнориуем все в этой директории
!/path/new  -- исключая эту директорию и так далее

пример:
/web/images/*
!/web/images/avatars
/web/images/avatars/*
!/web/images/avatars/profile
/web/images/avatars/profile/*
!/web/images/avatars/profile/.gitkeep

git stash -- закинуть изминения после HEAD в стэк и откатить до ближайшего коммита
git stash apply -- применить изминения
git stash drop
git stash list

git stash apply - применить изменения к текущей версии
git stash list - вывести список изменений
git stash show - вывести последние изменния
git stash drop - удалить последние изменения в списке 
git stash pop - [apply] + [drop]
git stash clear - очистить список изменений

git merge --abort -- скинуть мердж

git update-index --assume-unchanged -- отключить из отслеживания файл