Jquery Master функции
css(prop) – гэтэр
css(prop, val)
css ({prop1: val1, prop2: val2})
css(prop, function(i, v) {
	return v * 1.1;
}); 

Классы 
$(el).addClass('cls1') // $(el).addClass('cls1 cls2 cls3') – 3 класса сразу
$(el).hasClass('cls1')
$(el).removeClass('cls1')
$(el).toggleClass('cls1')
Атрибуты
$(el).attr('name');
$(el).attr('name', 'value');
$(el).removeAttr('name')
Свойства
$(el).prop('name');
$(el).prop('name', 'value');
$(el).removeProp('name');
Работа с выборками
$(el).is(selector) – проверка на выбор по селектору, например:
	$('select option').is(':checked')
	$('div').is('.active')

$(el).find(selector) – выбор потомков элемента подходящих под селектор
$(el).filter(selector) – оставить в выборке только элементы под селектор
$(el).get(0) == [0] – получить DOM узел по индексу
$(el).toArray() - выборка к массиву DOM узлов
$(el).eq(2) – получить 3-й элемент jQuery set

:eq(2) – 3-й элемент сэта
:lt(5) – элементы выборки с индексами от 0 до 4
:gt(5) – элементы сэта от 6 до конца
:checked, :disabled, :enabled, :focus, :empty, :not(selector) – доступны в CSS3
:visible – элемент виден, псевдофильтр jQuery

$(el).index(selector) – получить индекс элемента подходящего под селектор в 	родителе
$(el).parent() - ближайший родитель
$(el).parents() - все родители
$(el).parents(selector) – родители по селектору
$(el).children()
$(el).next([selector]) – следующий элемент (по селектору)
$(el).nextAll([selector]) 
$(el).prev([selector])
$(el).prevAll([selector])
$(el).siblings([selector])
$(el).closest(selector[, context]) – сэт ближайших элементов под селектор для 	каждого элемента сэта
$(el).add(selector) – новый сэт в котором старый + элементы под селектор
$(el).slice(start[, end]) – обрезка сэта
$(el).each(function(i, v) {})
$(el).not(selector|domNode|jqueryCollection) -- убрать из выборки элемент
$(el).end() – вернет выборку к предыдущему состоянию
$(el).addBack() – объеденить предыдущую выборку с текущей
	Пример: $(".general").find("p").addBack().addClass("new");
 
События
$('parent').on('click', 'child', handler);
$('parent').off('click', 'child', handler);
$('child').trigger('click');

шортхенд методы:
	$('child').click(function(e){});
	$('child').click();

Ajax
$(el).load(url, data, callback);
$.get(url, data, callback, dataType);
$.post(url, data, callback, dataType);
$.getScript(url, data, callback, dataType);
$(document).ajaxError(callback);
$('form').serialize();
$('form').serializeArray();
//Основные опции ajax
$.ajax({
	url: url,
	method: 'get',
	data: $('form:first').serialize(),
	dataType: 'html',
	success: callback,
	error: callback,
	cache: false
});

var jxhr = $.get(url, data, callback);
jxhr.abort(); //прекратить запрос



.animate( properties [, duration ] [, easing ] [, complete ] )

.stop() -- остановить анимацию на элементе

.animate( properties, options )
	properties – объект CSS свойств
	Основные свойства options:
		duration (default: 400)
			A string or number determining how long the animation will run.
easing (default: swing)
	Type: String 
	A string indicating which easing function to use for the transition.
queue (default: true)
	Type: Boolean or String 
 Свойство queue объекта options, которые вы отправляете в animate() определяет будет ли запланированная анимация отложена до тех пор пока не будут выполнены все предыдущие анимации. По умолчанию анимации вызываются по очереди, но вы можете отключить это, установив свойство queue в false. Анимации без очереди стартуют немедленно.
A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. As of jQuery 1.7, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call .dequeue("queuename") to start it.
complete
	Type: Function()
	A function that is called once the animation on an element is complete.
start
	Type: Function( Promise animation )
	A function to call when the animation on an element begins. 

DOM
$(elem).remove() -- удаляет элементы из DOM
$(elem).after() -- вставить после элемента
$(elem).before() -- вставить перед элементом
$(elem).append() -- добавить в конец
$(elem).prepend() -- добавить в начало
